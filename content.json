{"pages":[{"title":"正在整理中 。。。。。。","text":"","link":"/about/index.html"}],"posts":[{"title":"Markdown常用语法","text":"第一章 块元素1.1标题标题有6个等级，用#号表示 1234567# 标题1## 标题2## 标题2### 标题2#### 标题4##### 标题5###### 标题6 1.2引用使用&gt;字符，表示引用 123&gt; This is a blockquote with two paragraphs. This is first paragraph.&gt; This is second pragraph.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; This is another blockquote with one paragraph. There is three empty line to seperate two blockquote. This is a blockquote with two paragraphs. This is first paragraph.This is second pragraph.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.This is another blockquote with one paragraph. There is three empty line to seperate two blockquote. 1.3列表12* red* blue red blue 121. red2. blue red blue 1.4任务列表用 [ ] 或者 [X] 未完成，完成）表示列表，通过点击复选框来更改状态（完成/未完成） 12345- [ ] a task list item- [ ] list syntax required- [ ] normal **formatting**, @mentions, #1234 refs- [ ] incomplete- [x] completed a task list item list syntax required normal formatting, @mentions, #1234 refs incomplete completed 1.5代码块使用 按回车键，将会对代码进行高亮12 ​1234require 'redcarpet'markdown = Redcarpet.new(\"Hello World!\")puts markdown.to_html​ 12345```rubyrequire &apos;redcarpet&apos;markdown = Redcarpet.new(&quot;Hello World!&quot;)puts markdown.to_html ###1.6数学 可以使用MathJax呈现LaTeX数学表达式 1234567$$\\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\\\\\frac{\\partial X}{\\partial u} &amp; \\frac{\\partial Y}{\\partial u} &amp; 0 \\\\\\frac{\\partial X}{\\partial v} &amp; \\frac{\\partial Y}{\\partial v} &amp; 0 \\\\\\end{vmatrix}$$ $$\\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix}\\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\\\frac{\\partial X}{\\partial u} &amp; \\frac{\\partial Y}{\\partial u} &amp; 0 \\\\frac{\\partial X}{\\partial v} &amp; \\frac{\\partial Y}{\\partial v} &amp; 0 \\\\end{vmatrix}$$ 1.7表格使用 | First Header | Second Header | 按回车键，将会创建2列的表格 1234| First Header | Second Header || ------------- | ------------- || Content Cell | Content Cell || Content Cell | Content Cell | First Header Second Header Content Cell Content Cell Content Cell Content Cell 还可以使用 : 号，来设置文字对齐方式 12345| Left-Aligned | Center Aligned | Right Aligned || :------------ |:---------------:| -----:|| col 3 is | some wordy text | $1600 || col 2 is | centered | $12 || zebra stripes | are neat | $1 | Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 ###1.8 脚注 1234使用 [^footnote] 创建脚注.You can create footnotes like this[^1].[^1]: Here is the *text* of the **footnote**.然后，可以把鼠标停留在脚注中，查看内容 You can create footnotes like this[^1].[^1]: Here is the text of the footnote. 1.10横线输入 *** 或者 — 后，按回车键 1.11目录输入 [toc] ，按回车键 [TOC] 第二章 Span元素2.1链接文字描述包含在 [] 内，链接地址包含在 () 内，() 要紧接着 [] 后面 12This is [an example](http://example.com/ &quot;Title&quot;) inline link.[This link](http://example.net/) has no title attribute. This is an example inline link.This link has no title attribute. 2.1.1引用链接123[Bing][]And then define the link:[Bing]: http://bing.com/ BingAnd then define the link: 2.2图片123在链接格式前面添加 ! ，如下![在这里插入图片描述](http://pxebjkhug.bkt.clouddn.com/image-20190906161123468.png) 在链接格式前面添加 ! ，如下 ###2.3 强调 对应 HTML 的 标签 12*single asterisks*_single underscores_ single asterisks single underscores 如果像使用 * 号，在 * 号前使用 \\ 1\\*this text is surrounded by literal asterisks\\* *this text is surrounded by literal asterisks* 2.4加粗12**double asterisks**__double underscores__ double asterisksdouble underscores 2.5代码在文章中现实代码，用 ` 号表示 1Use the `printf()` function. Use the printf() function. 2.6删除线1~~Mistaken text.~~ Mistaken text. 2.7下划线1&lt;u&gt;Underline&lt;/u&gt; Underline ###2.8Emoji 表情 用两个 : 号包含单词，或者在 编辑 -&gt; 表情与符号 中选择 1:happy: :happy: 2.9高亮这个功能默认是关闭的，如果要打开这个功能（以 Mac 版本为例），选择 Typora -&gt; 偏好设置 -&gt; markdown 标签，勾选高亮复选框 1==highlight== ==highlight==","link":"/2019/09/10/Markdown常用语法/"},{"title":"栈","text":"","link":"/2019/09/11/栈/"},{"title":"树","text":"","link":"/2019/09/16/树/"},{"title":"hexo博客搭建教程","text":"###简介 Hexo 是一款基于 Node.js 的静态博客框架。Hexo 使用 Markdown 解析文章，用户在本地安装Hexo并进行写作，通过一条命令，Hexo即可利用靓丽的主题自动生成静态网页。 ###安装 因自己使用的mac电脑，这里以mac安装发布为例，windows大体差不多。 1.1电脑本地创建一个文件夹，例如我这里的blog。 1.2 打开电脑终端执行以下命令： 12$npm install -g hexo-cli$ hexo init 如果npm指令出现此报错zsh: command not found: node,需安装nodejs环境,下载链接 1.3 安装完成后，指定文件夹的目录如下 ├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 其中_config.yml文件用于存放网站的配置信息，你可以在此配置大部分的参数；scaffolds是存放模板的文件夹，当新建文章时，Hexo会根据scaffold来建立文件；source是资源文件夹，用于存放用户资源，themes是主题文件夹，存放博客主题，Hexo 会根据主题来生成静态页面。 1.4生成静态博客，在终端执行命令： 1hexo s Hexo将source文件夹中的Markdown 和 HTML 文件会被解析并放到public文件夹中，public文件夹用于存放静态博客文件，相当于网站根目录。至此博客雏形基本完成，在浏览器中访问http://localhost:4000/，如图所示： 2.1主题更换 前往主题页，选择喜欢的主题： 2.2 挑选喜欢的主题后，将主题clone到blog的themes文件夹下 1git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 2.3 修改_config.yml中对应的主题字段为你选择的主题名 到此主题更换成功，可以本地hexo s本地看看是否替换成功。 3.1发布到github 可以参看这篇文章：怎么把Hexo的博客托管到Git上","link":"/2019/09/06/hexo博客搭建教程/"},{"title":"线性表","text":"","link":"/2019/09/11/线性表/"},{"title":"队列","text":"","link":"/2019/09/11/队列/"}],"tags":[{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"栈","slug":"栈","link":"/tags/栈/"},{"name":"树","slug":"树","link":"/tags/树/"},{"name":"hexo博客","slug":"hexo博客","link":"/tags/hexo博客/"},{"name":"线性表","slug":"线性表","link":"/tags/线性表/"},{"name":"队列","slug":"队列","link":"/tags/队列/"}],"categories":[{"name":"其他","slug":"其他","link":"/categories/其他/"},{"name":"数据结构","slug":"数据结构","link":"/categories/数据结构/"},{"name":"技术","slug":"技术","link":"/categories/技术/"}]}